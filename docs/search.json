[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Raw data files\nAs previously mentioned, the folder 01_RawData folder contains all the raw files I obtained to estimate the effect of air quality health advisories on school absences.\n01_schools includes all files related to school absences and school characteristics in New York City. 02_AQI has the data on the air quality index forecast from the NYSDEC and the AQI measures from the EPA. 03_weather contains several data files of weather covariates. 04_shp is a repository of shape (or spatial) files. And 05_dem includes data on neighborhood-level socio-demographic characteristics from the US Census Buro.\n\n\n\n\n\nFootnotes\n\n\nI recommend downloading the files to an external hard drive to avoid memory issues↩︎"
  },
  {
    "objectID": "01_data.html",
    "href": "01_data.html",
    "title": "Air Pollution and Domestic Violence",
    "section": "",
    "text": "Wind Instrument\nWe build an instrument for air pollution based on our measures of wind speed and wind direction included in the weather data. The hourly wind direction data is in angle degrees, ranging from 0 to 360, while the hourly wind speed ranges from 0 to 14.6 (what are the units?). We first create daily measures of wind speed and wind direction by taking the average daily values.\nIn order to correctly compute an average wind direction value, we take some steps and use of trigonometric functions that have been suggested by Grange (2014). Particularly, we use the scalar average wind speed and the resultant vector average wind direction. We do this by calculating two wind vector components, u and v, representing the east-west and north-south directions, respectively. These components are calculated by first converting the wind direction degrees to radians. These components are calculated along with wind speed by weighting the components by the negative of wind speed magnitude,in order to take into have a measure of where the flow is heading to instead of where the wind is blowing from. [note: did we use this negative sign in our formula?\n[Check this section with Luis…]\n\n\nComputing the daily AQI\nWe compute inverse distance-weighted values of pollution and weather variables in order to interpolate (for issing values?) To do so we first extract the stations’ geo-coordinates and compute the distance between all measuring stations. We restrict our interpolation to use only stations that are within 50 kilometers of each other. We then compute an inverse distance-weighted value for each station, hour, and pollution and weather variable using the following formula:\n$$\n = \n$$\nWe also compute a standard Air Quality Index (AQI) measure. We take the following steps to prepare the pollution data: First we transform our ozone variable into particles per million. Then we create the eight hour ozone rolling average [Expand on this?]. We further bound PM10 and PM25 to five hundred units in order to avoid extremes by setting values greater than 500 to 500. The AQI is defined as the daily maximum of CO, NO2, PM25, PM10, O3, SO2. If the AQI is an infinite number, we set it as missing.\nFurthermore, we add the wind direction of the closest station.\n[TODO: Add sample table]\nFinally in order to create final air pollutoin dataset, we merge the normal, IDW, and Normal AQI data sets.\n#Create the final data set for the regressions\n#Clarify level of aggregation\nAssign weighted pollution, precipitation, and wind instrument values to the hospitals Compute the distance between stations and hospitals Add the station ID Only select the five closest stations to each hospital Calculate the IDW for each weather variable Merge all the pollution weighted values for each hospital Include the wind direction of the closest station join the wind direction, wind instrument, and rain to the weather variables\n\nAggregate the accidents data to total daily accidents per hospital\nAggregate the accidents to hourly total accidents per hospital by type\n\n\n\nSummary Statistics and Final Dataset Creation\n[Here instead write how we linked the data together and focus more on summary statistics, etc. ]\nWe focus on the sample of hospitals in the greater Mexico City area (Mexico Valley), which is composed of 16 muncipalities in Mexico City with 9,209,944 peopole, 59 municipalities in the state of Mexico with 12,437,287 people, and 1 municipality in the state of Hidalgo with 168,302 people. https://es.wikipedia.org/wiki/Zona_metropolitana_del_valle_de_México\nWe further restrict our sample to active establishments that are used for hospitalization purposes and omit psychiatric hospitals. Given changes in the reporting requirements starting in 2013, we only use data from that year onward.\n?@fig-hosp shows the frequency of accidents in hospitals []\n\n\nShow the Code\n# data %>% \n#   mutate(year = lubridate::year(date), label = TRUE)  %>% \n#   ggplot(aes(x = year)) +\n#   scale_x_continuous(breaks = round(seq(2013, 2019, by = 1), 1)) +\n#   geom_bar() +\n#   theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+\n#   facet_wrap(~hid,  scales = \"free_y\") + \n#   labs(title = \"Frequency of Accidents in CDMX Hospitals by Year: 2013-2019\")"
  },
  {
    "objectID": "02_descriptives.html",
    "href": "02_descriptives.html",
    "title": "02_descriptives",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "02_descriptives.html#running-code",
    "href": "02_descriptives.html#running-code",
    "title": "02_descriptives",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  }
]