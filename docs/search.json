[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Raw data files\nAs previously mentioned, the folder 01_RawData folder contains all the raw files I obtained to estimate the effect of air quality health advisories on school absences.\n01_schools includes all files related to school absences and school characteristics in New York City. 02_AQI has the data on the air quality index forecast from the NYSDEC and the AQI measures from the EPA. 03_weather contains several data files of weather covariates. 04_shp is a repository of shape (or spatial) files. And 05_dem includes data on neighborhood-level socio-demographic characteristics from the US Census Buro.\n\n\n\n\n\nFootnotes\n\n\nI recommend downloading the files to an external hard drive to avoid memory issues↩︎"
  },
  {
    "objectID": "01_data.html",
    "href": "01_data.html",
    "title": "Data",
    "section": "",
    "text": "Wind Instrument\nWe build an instrument for air pollution based on our measures of wind speed and wind direction in the weather data. The hourly wind direction data is in angle degrees, ranging from 0 to 360, while the hourly wind speed ranges from 0 to 14.6 (what are the units?).\nIn order to correctly compute an average wind direction value, we take some steps and use of trigonometric functions, following Grange (2014). Particularly, we calculate two wind vector components using the wind directon in degrees \\(\\theta_{i}\\) , \\(\\overrightarrow{u}\\) and \\(\\overrightarrow{v}\\), representing the east-west and north-south directions, respectively. These components are calculated using the following formula\n$$\n = - u_{i}sin[] \\\n = - u_{i}cos[]\n$$\n\n\nComputing the daily AQI\nWe also compute a standard Air Quality Index (AQI) measure by taking the following steps:\nTo prepare the data, we first compute inverse distance-weighted values of pollution and weather variables in order to interpolate for missing values. To do so we first extract the stations’ geo-coordinates and compute the distance between all measuring stations. We restrict our interpolation to use only stations that are within 50 kilometers of each other. We then compute an inverse distance-weighted value for each station, hour, and pollution and weather variable using the following formula:\n$$\n = \n$$\nTo create the AQI measure, we transform our ozone variable into particles per million and create an eight hour ozone rolling average. We further bound PM10 and PM25 to 500 units in order to avoid extremes. The AQI is defined as the daily maximum of CO, NO2, PM25, PM10, O3, SO2 and calculated according to the U.S. Environmental Protection Agency (EPA) documentation https://www.airnow.gov/sites/default/files/2020-05/aqi-technical-assistance-document-sept2018.pdf. The AQI index variable is categorized as good (0-50), moderate (51-100), unhealthy for sensitive groups (101-150), unhealthy (151-200), very unhealthy (201-300), and hazardous (301-500).\n#Clarify level of aggregation [Check with Luis: currently we’re taking the max of hourly pollutants for each pollutant, then max of this max for a given day]\nFinally, in order to create final air pollution dataset, we merge the pollution data with the inverse-distance weighted values and the daily AQI datasets together. Furthermore, we add the wind direction of the closest station.\n[TODO: Add sample table]\n#Create the final data set for the regressions\nIn order to create our final dataset, we assign weighted pollution, precipitation, and wind instrument values to the hospitals based on the longitude and latitude. We first compute the distance between stations and hospitals and only select the five closest weather and pollution stations to each hospital. We then calculate the IDW value for each weather variable and merge all the pollution weighted values for each hospital. We further include the wind direction of the closest station and add the wind direction values, wind instrument, and rain and weather variables.\n\nAggregate the accidents data to total daily accidents per hospital\nAggregate the accidents to hourly total accidents per hospital by type\n\n\n\nSummary Statistics and Final Dataset Creation\n[ and focus more on summary statistics, etc. ]\n?@fig-hosp shows the frequency of accidents in hospitals []"
  },
  {
    "objectID": "02_descriptives.html",
    "href": "02_descriptives.html",
    "title": "02_descriptives",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "02_descriptives.html#running-code",
    "href": "02_descriptives.html#running-code",
    "title": "02_descriptives",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  }
]