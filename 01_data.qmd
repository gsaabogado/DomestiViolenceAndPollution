---
title: "Data"
author: "Ireri Hernandez and Luis Sarmiento"
format: 
  html: 
    toc: true
    warning: false
    code-fold: true
    code-summary: "Show the Code"
---

# Data 

```{r}
wd = gsub("web-page", "", getwd())
injuries = read_rds(paste0(wd,"02_GenData/01_accidents/AccidentsCdmx.rds"))
```

## Injuries

We obtain administrative data on hospitalizations from Mexico's national health ministry through the health information general directorate (SS/DGIS, SINAC 2021; http://www.dgis.salud.gob.mx/contenidos/basesdedatos/Datos_Abiertos_gobmx.html), which has case-level data on all injury-related hospital admissions. This data includes the exact date, time and locality of the injury in addition to type of injury and demographic patient data such as age, gender and education. The data contains the place where the patients report the accident occurred, classified as: home/dwelling, institutional residence, school, sports area, public road (pedestrian), commerce and service area, work, farm, club/bar, public vehicle, private vehicle, or other. We download, clean, and combine the data from 2010-2014 (reported together in one file), and the yearly files of 2015-2019.

![MX Hospitalization Registration Form. Note: Form used by hospitals to collect case information.](Formato_Lesiones_2021.pdf)

We keep the variables of interest for our study, including injury id, hospital id, patient demographics, date and time of injury, other injury characteristics and information on the type of aggression. We then transform the date variable for all the files to a consistent date format YYYY-MM-DD, and further create a variable for the injury hour by parsing the hour component of the existing hour:minute variable. We finally bind all of the yearly files together. 

We make some restrictions to our sample. First, we only keep hospitalizations starting from 2013 up to 2019. There were some reporting changes in 2013, which creates inconsistencies in the way hospitals report cases. Furthermore, we keep only hospitalizations that happened in the greater Mexico City area (Mexico Valley), which is composed of 16 muncipalities in Mexico City with 9,209,944 peopole, 59 municipalities in the state of Mexico with 12,437,287 people, and 1 municipality in the state of Hidalgo with 168,302 people. https://es.wikipedia.org/wiki/Zona_metropolitana_del_valle_de_México 

Finally, we keep only hospitalization units (i.e. remove small doctors' offices), remove cases from hospitals that are psychiatric units, and keep only hospitals that are functioning during the observation period. 

## Hospital Controls
We obtain hospital characteristics from the Mexican health ministry registry of health establishments, which contains for each hospital a unique health establishment code (CLUES) alongside other hospital location, type of establishment (e.g. hospitalization, social support, external consultation), total number of beds and doctors offices, functioning status, longitude and latitude. This allows us to match hospitals to their longitude and latitude, which we later use to match to pollution monitors.


The cleaned injuries data set contains all injuries and accidents reported by all (public) hospitals in Mexico between `r month(min(injuries$date), label = T)` `r year(min(injuries$date))` and `r month(max(injuries$date), label = T)` `r year(max(injuries$date))`. In total, the data set contains `r comma(nrow(injuries))` observations across `r comma(length(unique(injuries$Clues)))` hospitals. 


The following set of tables contain the main variables we use in our analysis. First, @tbl-RawIdentifiers contains spatial case identifiers as the hospital id (CLUES) identification code alongside the state and county of the observation. @tbl-RawTimeStamp includes the date and time of the accident and the date and time of the hospitalization. Additionally, it includes an indicator variable when the accident occurred during a holiday.


::: panel-tabset
## Identifiers
```{r}
#| label: tbl-RawIdentifiers
#| tbl-cap: Spatial case identifiers
#| tbl-cap-location: top
#| echo: true
# Show the data set
kbl(select(injuries, id:county) %>%  head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover")) |> 
  column_spec(c(1), italic = T, color = "DarkBlue") |> 
   footnote(general = "id = Case ID; Clues = Hospital Identifier; state = Numeric code for the federal state; county = Numeric code for the municipality", general_title = "Notes:", footnote_as_chunk = T)
```


## Time Stamps
```{r}
#| label: tbl-RawTimeStamp
#| tbl-cap: Temporal case identifiers
#| tbl-cap-location: top
#| echo: true
# Show the data set
kbl(select(injuries, id, date:HospHour, festivity) %>%  head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover")) |> 
  column_spec(c(1), italic = T, color = "DarkBlue") |> 
   footnote(general = "id = Case ID; date = Date of the accident; hour = Hour of the accident, HospDate = Date of Hospitalization, HospHour = Hour of Hospitalization; festivity = Answer to the question, did the event occur during a holiday or festivity? 1 -- Yes, 2-- No", general_title = "Notes:", footnote_as_chunk = T)

## Demographics
```{r}
#| label: tbl-RawDemographics
#| tbl-cap: Demographic characteristics of the patient
#| tbl-cap-location: top
#| echo: true
# Show the data set
kbl(select(injuries, id, age:educ) %>%  head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover")) |> 
  column_spec(c(1), italic = T, color = "DarkBlue") |> 
   footnote(general = "id = Case ID -- Clues = Hospital Identifier -- state = Numeric code for the federal state --
             county = Numeric code for the municipality -- age = Age of the victim -- gender = (1) Male", general_title = "Notes:", footnote_as_chunk = T)
```

## Demographics
```{r}
#| label: tbl-PatientDemographics
#| tbl-cap: Demographics of the patient
#| tbl-cap-location: top
#| echo: true
# Show the data set
kbl(select(injuries, id, age:educ) %>%  head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover")) |> 
  column_spec(c(1), italic = T, color = "DarkBlue") |> 
   footnote(general = "id = Case ID, age = Age of the patient, gender = Gender of the patient, literacy = Literaciy of the patient (1 yes and 2 no), educ = Education of the patient (0 Not Specified, 1 No Education, 31 = Completed Primary School, 32 = Incomplete Primary School)", general_title = "Notes:", footnote_as_chunk = T)
```
## Accident Characteristics
```{r}
#| label: tbl-CaseCharacteristics
#| tbl-cap: Characteristics of the case
#| tbl-cap-location: top
#| echo: true
# Show the data set
kbl(select(injuries, id, icd10, place:ambulance, Service) %>%  head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover")) |> 
  column_spec(c(1), italic = T, color = "DarkBlue") |> 
   footnote(general = "id = Case ID -- Clues = Hospital Identifier -- state = Numeric code for the federal state --
             county = Numeric code for the municipality -- age = Age of the victim -- gender = (1) Male", general_title = "Notes:", footnote_as_chunk = T)
```

## Assailant
```{r}
#| label: tbl-RawAssailant
#| tbl-cap: Charateristics of the assailant
#| tbl-cap-location: top
#| echo: true
# Show the data set
kbl(select(injuries, id, Nassailants:AssailantRelation) %>%  head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover")) |> 
  column_spec(c(1), italic = T, color = "DarkBlue") |> 
   footnote(general = "id = Case ID; Nassailant = Number of assailants; AssailantAge = Age of the assailant; AssailantSex = Gender of the assailant; AssailantRelation = Relationship between the victim and tha assailant", general_title = "Notes:", footnote_as_chunk = T)
```
:::


## Air Pollution
Air pollution data comes from the center for atmospheric information of Mexico City (Dirección de Monitoreo Atmosférico de la Ciudad de México) and contains hourly observations of the primary criteria pollutants: carbon monoxide (CO), coarse particulate matter (PM10), fine particulate matter (PM25), nitrogen dioxide (NO2), ozone (O3), and sulfur dioxide (SO2). The data contains for each station the id code and the date and hour when the reading was collected. We merge the pollution data with a dataset that contains the station's latitude and longitude. 

Cleaning: We create a separate date and hour variable based on the existing date and time joint variable, transform the 24 hour variable to 0, and remove stations for which we do not have longitude/latitude data. 

[TODO: Add sample table like above]

## Weather

The weather data comes from 34 weather stations from the atmospheric monitoring system of Mexico City (Sistema de Monitoreo Atmosférico, SIMAT). This contains the name of each weather station, a variable with the date and time of the measurement, and measures of temperature, relative humidity, atmospheric pressure, wind speed, and wind direction. We transform the 24 hour variable to 0.   

We download daily rain data from Mexico from from the Global Surface Summary of the Day (GSOD) data provided by the US National Centers for Environmental Information (NCEI), which contains daily data on rain, minimum and maximum temperature, and for each station, the id number, latitude and longitude. 

We use a shapefile of Mexico restricted to include only the municipalities in our Valley of Mexico sample, based on our list of municipality codes. We then restrict the rain data to include only the observations that are located within the boundaries of this restricted shapefile. 


# Wind Instrument 

We build an instrument for air pollution based on our measures of wind speed and wind direction in the weather data. The hourly wind direction data is in angle degrees, ranging from 0 to 360, while the hourly wind speed ranges from 0 to 14.6 (what are the units?).  

In order to correctly compute an average wind direction value, we take some steps and use of trigonometric functions, following Grange (2014). Particularly, we calculate two wind vector components using the wind directon in degrees $\theta_{i}$ , $\overrightarrow{u}$ and $\overrightarrow{v}$, representing the east-west and north-south directions, respectively. These components are calculated using the following formula 

$$

 \overrightarrow{u} = - u_{i}\times sin[\frac{\theta_{i}}{180}] \\
 
\overrightarrow{v} = - u_{i}\times cos[\frac{\theta_{i}}{180}]


$$

# Computing the daily AQI 

We also compute a standard Air Quality Index (AQI) measure by taking the following steps: 

To prepare the data, we first compute inverse distance-weighted values of pollution and weather variables in order to interpolate for missing values. To do so we first extract the stations' geo-coordinates and compute the distance between all measuring stations. We restrict our interpolation to use only stations that are within 50 kilometers of each other. We then compute an inverse distance-weighted value for each station, hour, and pollution and weather variable using the following formula:

$$

\frac{\sum_{n=1}^{n} v_i\frac{1}{d_i^2}}{\sum_{n=1}^{n} \frac{1}{d_i^2}} = \widehat{idw} 

$$

To create the AQI measure, we transform our ozone variable into particles per million and create an eight hour ozone rolling average. We further bound PM10 and PM25 to 500 units in order to avoid extremes. The AQI is defined as the daily maximum of CO, NO2, PM25, PM10, O3, SO2 and calculated according to the U.S. Environmental Protection Agency (EPA) documentation https://www.airnow.gov/sites/default/files/2020-05/aqi-technical-assistance-document-sept2018.pdf. The AQI index variable is categorized as good (0-50), moderate (51-100), unhealthy for sensitive groups (101-150), unhealthy (151-200), very unhealthy (201-300), and hazardous (301-500).

#Clarify level of aggregation
[Check with Luis: currently we're taking the max of hourly pollutants for each pollutant, then max of this max for a given day]

Finally, in order to create final air pollution dataset, we merge the pollution data with the inverse-distance weighted values and the daily AQI datasets together. Furthermore, we add the wind direction of the closest station. 

[TODO: Add sample table]

#Create the final data set for the regressions

In order to create our final dataset, we assign weighted pollution, precipitation, and wind instrument values to the hospitals based on the longitude and latitude. We first compute the distance between stations and hospitals and only select the five closest weather and pollution stations to each hospital. We then calculate the IDW value for each weather variable and merge all the pollution weighted values for each hospital. We further include the wind direction of the closest station and add the wind direction values, wind instrument, and rain and  weather variables.

#### Aggregate the accidents data to total daily accidents per hospital ####
Aggregate the accidents to hourly total accidents per  hospital by type

# Summary Statistics and Final Dataset Creation 
[ and focus more on summary statistics, etc. ]


@fig-hosp shows the frequency of accidents in hospitals []

